name: Build and Publish
on:
  push:
    tags:
      - 'v*'
    branches: [main]
  pull_request:
    branches: ['*']
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DOCKER_BUILD_SUMMARY: true

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-go@master
        with:
          go-version: '1.23'

      - name: Betteralign
        run: |
          go install github.com/dkorunic/betteralign/cmd/betteralign@latest
          betteralign ./...

      - name: golangci-lint
        uses: golangci/golangci-lint-action@master
        with:
          version: v1.60.3
          args: --timeout 3m --verbose

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Set up Go
        uses: actions/setup-go@master
        with:
          go-version: '1.23'

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v -race ./...

  build-and-push:
    needs: [lint, build]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Docker tags
        id: tags
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "tags=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "tags=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./zarf/docker/Dockerfile
          push: true
          tags: ${{ steps.tags.outputs.tags }}